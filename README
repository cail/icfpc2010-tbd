
  ICFPC TBD team repository



=== Instructions ===

python (preferably 32-bit version)
setuptools
easy_install numpy, psyco (optional)
eclipse
pydev (specify preferences->pydev->python interpreter)
msysgit (for windows)

--

Eclipse projects correspond to directories in repo (probably, top level directories only)
But eclipse workspace itself is not in repo (that's why I added .metadata in gitignore)

=== Useful links

Good cheat sheet on python:
  http://www.limsi.fr/Individu/pointal/docs/python:pqrc
Git vs SVN crashcourse
  http://git-scm.com/course/svn.html

== Git-related stuff ==

Generate keys (http://help.github.com/msysgit-key-setup/)
Upload public key on github account settings page

Line endings:
  for linux    git config --global core.autocrlf input
  for windows  git config --global core.autocrlf true

git config --global user.name "Your Name"
git config --global user.email "address you used to register on github"

git clone git@github.com:cail/icfpc2010-tbd.git


In eclipse specify this repo directory (icfpc2010-tbd ) as workspace directory. 
But do not add '.metadata' dir to version control (it's content can be 
specific for each user).
'Import'->'Existing project into workspace' test_proj to workspace.

Run it.

Hopefully you are all set.


== Git working cycle, as I understand it ==
git fetch
hack
git add
gitk (to ensure you added to index all changes you indended to add)
git commit
git fetch
[resolve conflicts if any]
git push

== Git working cycle, cail's version ==
!! git fetch only fetches the remote branch, but doesn't merge it with your 'master'
!! git pull is a paired [git fetch+git merge] and is simpler

git pull
[hack]
git add
gitk (to ensure you added to index all changes you indended to add)
git commit (or git gui for better and precise commit management)
git pull
[resolve conflicts if any]
git push


== Never Never Never revert your published history!
Never do 'git commit --amend' if you've already push-ed the previous commit!
Never do 'git rebase' on published commits
