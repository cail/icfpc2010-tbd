Формат чисел.

# степени тройки -1: 22 = 8, 222 = 26, 2222 = 80, 22222 = 242

Вот есть машина, например:
new = '10012222 0 00 ' + '0' * 6
на первую компоненту пока не смотрим
последняя компонента это тупо число в троичке. Вот это всё нам выдаёт ошибку с каким-то большим числом, последняя компонента к нему прибавляется. То есть если бы я написал там '000001', ошибка увеличилась бы на 1. Или могу написать '2' * 6, увеличится на дохуя.
предпоследняя компонента - длина этого числа. Тоже тупо в троичке. Например:
new = '10012222 0 01 ' + '1' * 7
new = '10012222 0 22 ' + '1' * 14
Я использую '1', а не '0' чтобы если я вдруг залезу в длину, у меня сразу же случилось несовпадение длины.
Дальше интереснее:
new = '10012222 10 000 ' + '1' * 15
new = '10012222 10 222 ' + '1' * 41
new = '10012222 11 0000 ' + '1' * 42
new = '10012222 11 2222 ' + '1' * 122
new = '10012222 12 00000 ' + '1' * 123
new = '10012222 12 22222 ' + '1' * (123 + 242)

new = '1001222222 000000000 ' + '1' * (123 + 242 + 1)
Я очень сильно подозреваю, что эта последняя компонента длины на самом деле выглядит как 0 000 00000 -- то есть как то, с чего мы начали, и кодирует длину поебени именно так. Однако проверить непосредственно как бы не могу, угадайте, почему =)

То есть всё довольно мило и рекурсивно.

Проблема в том, что это я в результате знаю, как выглядит формат числа, начинающегося со 122  (первое из них выглядит как "122 0 00", если вы понимаете, о чём я, и даёт ошибку про tank 4). 

Но хуууй его знает, как именно выглядят меньшие числа. Потому что мне не удаётся различить объявление числа (кажется, что это 122, для длинных чисел например) и что-то вроде cons.

То есть например, самая простая машина выглядит как 10 0 0. Первый компонент это то ли число элементов тупла, то ли символ cons. 
Ещё есть машины "10 0 10", "10 10 0" и "10 10 10". Последний компонент при этом пиздит про номер танка, а вот этот средний компонент кодирует auxillary reaction chamber flag. Если его сделать больше, типа 110, то падает ошибка что он должен быть от 0 до 1.

Ну то есть да, кажется что младшшие числа идут как-то так

0 - real 0
10 - 0
110 - 1
111 - 2
112 - 3
122000 - 4 -- и дальше мы знаем.

Но что-то с древовидностью хуйня. То есть опять же _кажется_, что 22 порождает поддерево со скольки-то детями. Но бляяя. Ваще нихуя не понятно, у меня даже в процессе создаётся ощущение, что у них местами какой-то гибрид нормальной записи чисел и записи чисел как глубины списка, поэтому часть хуйни, которую я считаю числами, на самом деле список.

Вот.







0 - real 0
10 - 0
110 - 1
111 - 2
112 - 3
122000 - 4
122022 - 12
12210000 - 13
12210222 - 39
122110000 - 40
122112222 - 120
1221200000 - 121
1221222222 - 363
12222000000000 - 364
12222000222222 - 1092
122220010000000 - 1093
122220012222222 - 3279
1222200200000000 - 3280
1222200222222222 - 9840
12222010000000000 - 9841
12222010222222222 - 29523
122220110000000000 - 29524
122220112222222222 - 88572
1222201200000000000 - 88573
1222201222222222222 - 265719








122000010

0R:
1LX0#2L1L,
0R3L0#0L2R,
0L1R0#X3R,
5L2R0#1R4L,
3R4R0#6R4R,
7R7L0#3L7L,
6R4L0#7R6L,
5R6L0#5R5L:
2L



21010                                        <- (123) or numerical value must be 0 or 1 here
221010022010102201111                         <- (123) or numerical value must be 0 or 1 here
2210100220101022011111                        <- (123) or numerical value must be 0 or 1 here
22101002201010220111110221111100112           <- expecting: '2'...
2210100220101022011111022111110011221001011   <- (123) or numerical value must be 0 or 1 here
221010022010102201111102211111001122100101102 <- expecting: '2'


022000010
parse error in car description
    "input" (line 1, column 2):
unexpected '2'
expecting end of input



122000010
This instance already exists, you cannot submit it again.



1022000010
parse error in car description
    "input" (line 1, column 3):
numerical value must be 0 or 1 here



1122000010
you have produced fuel
for 0 tanks
using 0 ingredients of air
car must contain at least one Main reaction chamber
    Ja.
sections must be properly connected
In the car, tank 0 is not properly connected to tank 4



10022000010
parse error in car description
    "input" (line 1, column 9):
unexpected '0'
expecting end of input



10122000010
parse error in car description
    "input" (line 1, column 3):
numerical value must be 0 or 1 here



11022000010
parse error in car description
    "input" (line 1, column 4):
numerical value must be 0 or 1 here



11122000010
parse error in car description
    "input" (line 1, column 5):
unexpected token
expecting: '2' or numerical value must be 0 or 1 here



100022000010
parse error in car description
    "input" (line 1, column 5):
unexpected '2'
expecting end of input



100122000010
parse error in car description
    "input" (line 1, column 10):
unexpected '0'
expecting end of input



101022000010
parse error in car description
    "input" (line 1, column 10):
unexpected '0'
expecting end of input



101122000010
parse error in car description
    "input" (line 1, column 3):
numerical value must be 0 or 1 here



110022000010
parse error in car description
    "input" (line 1, column 10):
unexpected '0'
expecting end of input



110122000010
parse error in car description
    "input" (line 1, column 4):
numerical value must be 0 or 1 here



111022000010
parse error in car description
    "input" (line 1, column 5):
numerical value must be 0 or 1 here



111122000010
parse error in car description
    "input" (line 1, column 5):
numerical value must be 0 or 1 here